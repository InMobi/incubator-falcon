---++ Building & Installing Falcon


---+++ Building Falcon

<verbatim>
git clone https://git-wip-us.apache.org/repos/asf/incubator-falcon.git falcon

cd falcon

export MAVEN_OPTS="-Xmx1024m -XX:MaxPermSize=256m" && mvn clean install [For hadoop 1]
export MAVEN_OPTS="-Xmx1024m -XX:MaxPermSize=256m" && mvn clean install -Dhadoop.profile=2 [For hadoop 2]

[optionally -Dhadoop.version=<<hadoop.version>> can be appended to build for a specific version of hadoop]

</verbatim>

Once the build successfully completes, artifacts can be packaged for deployment. The package can be built in embedded or distributed mode.

*Embedded Mode*
<verbatim>

mvn clean assembly:assembly -DskipTests -DskipCheck=true [For hadoop 1]
mvn clean assembly:assembly -DskipTests -DskipCheck=true -Dhadoop.profile=2 [For hadoop 2]

</verbatim>

Tar can be found in {project dir}/target/falcon-${project.version}-bin.tar.gz

Tar is structured as follows

<verbatim>

|- bin
   |- falcon
   |- falcon-start
   |- falcon-stop
|- conf
   |- startup.properties
   |- runtime.properties
   |- client.properties
   |- log4j.xml
|- src
|- docs
|- apidocs
|- client
   |- lib (client support libs)
|- server
   |- webapp
      |- falcon.war
|- logs (application log files & temp data files)
   |- falcon.pid
   
</verbatim>

*Distributed Mode*

<verbatim>

mvn clean assembly:assembly -DskipTests -DskipCheck=true -P distributed -Dhadoop.profile=1 [For hadoop 1]
mvn clean assembly:assembly -DskipTests -DskipCheck=true -P distributed -Dhadoop.profile=2 [For hadoop 2]

</verbatim>

This generates 3 tars - {project dir}/target/falcon-${project.version}-prism.tar.gz, {project dir}/target/falcon-${project.version}-server.tar.gz and {project dir}/target/falcon-${project.version}-client.tar.gz

Package structure of prism and server tars is same as that of the embedded package with one difference that prism package contains prism war instead of falcon war. Client package is structured as follows 
 
<verbatim>

|- bin
   |- falcon
|- conf
   |- client.properties
   |- log4j.xml
|- client
   |- lib (client support libs)
   
</verbatim>

---+++ Installing & running Falcon

*Installing falcon*
<verbatim>
tar -xzvf {falcon package}
cd falcon-server-${project.version} or cd falcon-prism-${project.version}
</verbatim>

*Starting Falcon Server*
<verbatim>
bin/falcon-start [-port <port>]
</verbatim>

By default, 
* falcon server starts at port 15000. To change the port, use -port option
* falcon server starts embedded active mq. To control this behaviour, set the following system properties using -D option in environment variable FALCON_OPTS:
   * falcon.embeddedmq=<true/false> - Should server start embedded active mq, default true
   * falcon.emeddedmq.port=<port> - Port for embedded active mq, default 61616
   * falcon.embeddedmq.data=<path> - Data path for embedded active mq, default {package dir}/logs/data
* falcon server starts with conf from {package dir}/conf. To override this (to use the same conf with multiple falcon upgrades), set environment variable FALCON_CONF to the path of conf dir

__Adding Extension Libraries__
Library extensions allows users to add custom libraries to entity lifecycles such as feed retention, feed replication and process execution. This is useful for usecases such as adding filesystem extensions. To enable this, add the following configs to startup.properties:
*.libext.paths=<paths to be added to all entity lifecycles>
*.libext.feed.paths=<paths to be added to all feed lifecycles>
*.libext.feed.retentions.paths=<paths to be added to feed retention workflow>
*.libext.feed.replication.paths=<paths to be added to feed replication workflow>
*.libext.process.paths=<paths to be added to process workflow>

The configured jars are added to falcon classpath and the corresponding workflows


*Starting Prism*
<verbatim>
bin/prism-start [-port <port>]
</verbatim>

By default, 
* falcon server starts at port 16000. To change the port, use -port option
* prism starts with conf from {package dir}/conf. To override this (to use the same conf with multiple prism upgrades), set environment variable FALCON_CONF to the path of conf dir

*Using Falcon*
<verbatim>
bin/falcon admin -version
Falcon server build version: {Version:"0.3-SNAPSHOT-rd7e2be9afa2a5dc96acd1ec9e325f39c6b2f17f7",Mode:"embedded"}

----

bin/falcon help
(for more details about falcon cli usage)
</verbatim>

*Stopping Falcon Server*
<verbatim>
bin/falcon-stop
</verbatim>

*Stopping Prism*
<verbatim>
bin/prism-stop
</verbatim>

---+++ Preparing oozie bundle for use with Falcon
<verbatim>
cd <<project home>>
mkdir target/package
src/bin/pacakge.sh <<hadoop-version>>

>> ex. src/bin/pacakge.sh 1.1.2 or src/bin/pacakge.sh 0.20.2-cdh3u5
>> oozie bundle available in target/package/oozie-3.2.0-incubating/distro/target/oozie-3.2.2-distro.tar.gz
</verbatim>